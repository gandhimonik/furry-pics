{"version":3,"sources":["index.js"],"names":["client","ApolloClient","uri","GET_DOGS","gql","_templateObject","Dogs","_ref","onQuery","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_apollo__WEBPACK_IMPORTED_MODULE_9__","query","obj","GET_DOG_PHOTO","_templateObject2","DogPhoto","_ref2","breed","variables","_ref3","loading","error","data","concat","className","src","dog","displayImage","alt","App","props","_this","Object","_Users_monikg_labspace_furry_pics_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_monikg_labspace_furry_pics_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_monikg_labspace_furry_pics_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","dogs","selectedDog","_this2","_ref4","message","setState","name","onChange","onDogSelected","map","key","id","value","target","_ref5","_this3","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mkBAQE,IAAMA,EAAS,IAAIC,IAAa,CAC9BC,IAAK,8CAGDC,EAAWC,YAAHC,KASRC,EAAO,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,QAAF,OACXC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAOV,GAEV,SAACW,GAAD,OAASN,EAAQM,MAKjBC,EAAgBX,YAAHY,KASbC,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACfV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAOE,EAAeK,UAAW,CAAED,UACvC,SAAAE,GAA4B,IAA1BC,EAA0BD,EAA1BC,QAASC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KACjB,OAAIF,EAAgB,KAChBC,EAAO,GAAAE,OAAUF,GAGnBd,EAAAC,EAAAC,cAAA,OAAKe,UAAU,yBAAyBC,IAAKH,EAAKI,IAAIC,aAAcC,IAAI,QAM1EC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,KACNC,YAAa,IAJET,0EAQa,IAAAU,EAAAP,KAAvBd,EAAuBsB,EAAvBtB,QAASC,EAAcqB,EAAdrB,MAAOC,EAAOoB,EAAPpB,KACvB,OAAIF,EAAgBb,EAAAC,EAAAC,cAAA,uBAChBY,EAAO,UAAAE,OAAiBF,EAAMsB,UAE7BT,KAAKI,MAAMC,MACdL,KAAKU,SAAS,CACZL,KAAMjB,EAAKiB,KACXC,YAAalB,EAAKiB,KAAK,GAAGtB,QAK5BV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQe,UAAU,2BAA2BqB,KAAK,MAAMC,SAAU,SAAClC,GAAD,OAAS6B,EAAKM,cAAcnC,KAE1FU,EAAKiB,KAAKS,IAAI,SAAAtB,GAAG,OACfnB,EAAAC,EAAAC,cAAA,UAAQwC,IAAKvB,EAAIwB,GAAIC,MAAOzB,EAAIT,OAC7BS,EAAIT,qDASO,IAAVmC,EAAUC,EAAVD,OACdlB,KAAKU,SAAS,CACZJ,YAAaY,EAAOD,yCAId,IAAAG,EAAApB,KACR,OACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBZ,OAAQA,GACtBS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACL,EAAD,CAAME,QAAS,SAACM,GAAD,OAAS0C,EAAKhD,QAAQM,MACrCL,EAAAC,EAAAC,cAAA,MAAIe,UAAU,sBAAsBU,KAAKI,MAAME,aAC/CjC,EAAAC,EAAAC,cAACM,EAAD,CAAUE,MAAOiB,KAAKI,MAAME,uBAhDpBe,IAAMC,WAyDxBC,IAASC,OACPnD,EAAAC,EAAAC,cAACoB,EAAD,MACA8B,SAASC,eAAe","file":"static/js/main.179adad5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport {gql} from 'apollo-boost';\nimport {ApolloProvider, Query} from 'react-apollo';\nimport './semantic.min.css';\nimport './index.css';\n\n  const client = new ApolloClient({\n    uri: 'https://dog-graphql-api.glitch.me/graphql'\n  });\n\n  const GET_DOGS = gql`\n    {\n      dogs {\n        id\n        breed\n      }\n    }\n  `;\n\n  const Dogs = ({onQuery}) => (\n    <Query query={GET_DOGS}>\n      {\n        (obj) => onQuery(obj)\n      }\n    </Query>\n  );\n\n  const GET_DOG_PHOTO = gql`\n      query Dog($breed: String!) {\n        dog(breed: $breed) {\n          id\n          displayImage\n        }\n      }\n  `;\n\n  const DogPhoto = ({ breed }) => (\n    <Query query={GET_DOG_PHOTO} variables={{ breed }}>\n      {({loading, error, data}) => {\n        if (loading) return null;\n        if (error) return `${error}`;\n\n        return (\n          <img className=\"ui centered huge image\" src={data.dog.displayImage} alt=\"\" />\n        );\n      }}\n    </Query>\n  );\n\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        dogs: null,\n        selectedDog: '',\n      }\n    }\n\n    onQuery({loading, error, data}) {\n      if (loading) return <p>Loading...</p>;\n      if (error) return `Error! ${error.message}`;\n\n      if (!this.state.dogs) {\n        this.setState({\n          dogs: data.dogs,\n          selectedDog: data.dogs[0].breed,\n        });\n      }\n\n      return (\n        <div>\n          <select className=\"ui search fluid dropdown\" name=\"dog\" onChange={(obj) => this.onDogSelected(obj)}>\n            {\n              data.dogs.map(dog => (\n                <option key={dog.id} value={dog.breed}>\n                  {dog.breed}\n                </option>\n              ))\n            }\n          </select>\n        </div>\n      );\n    }\n\n    onDogSelected({ target }) {\n      this.setState({\n        selectedDog: target.value,\n      });\n    }\n\n    render () {\n      return (\n        <ApolloProvider client={client}>\n          <div>\n            <h1>Furry Pics</h1>\n            <Dogs onQuery={(obj) => this.onQuery(obj)} />\n            <h2 className=\"ui centered header\">{this.state.selectedDog}</h2>\n            <DogPhoto breed={this.state.selectedDog} />\n          </div>\n        </ApolloProvider>\n      );\n    }\n  }\n\n  // ========================================\n\n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}