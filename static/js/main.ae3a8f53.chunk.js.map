{"version":3,"sources":["index.js"],"names":["Square","props","bgColor","isWinner","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","style","backgroundColor","value","Board","i","_this","this","slice","map","squareId","sequence","indexOf","key","squares","_this2","rows","id","renderSquare","React","Component","Game","_this3","Object","_Users_monik_workspace_home_seeker_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_monik_workspace_home_seeker_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_monik_workspace_home_seeker_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","location","order","step","setState","length","calculateWinner","concat","Math","floor","status","_this4","current","winner","sortOrder","moves","move","desc","jumpTo","reverse","side","includes","handleClick","handleSort","lines","_lines$i","_Users_monik_workspace_home_seeker_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae3a8f53.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n  function Square(props) {\n    const bgColor = (props.isWinner) ? 'green' : 'transparent';\n\n    return (\n      <button \n        className=\"square\" \n        onClick={props.onClick}\n        style={{backgroundColor: bgColor}}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      const ids = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n      const squares = ids.slice(i, i + 3).map((squareId) => {\n        const isWinner = (this.props.sequence && this.props.sequence.indexOf(squareId) > -1) ? true : false;\n\n        return (\n          <Square key={squareId}\n            isWinner = {isWinner}\n            value={this.props.squares[squareId]}\n            onClick={() => this.props.onClick(squareId)} />\n          );\n      });\n\n      return squares;\n    }\n  \n    render() {\n      const rows = [0, 3, 6].map((id) => {\n        return (\n          <div className=\"board-row\" key={id}>\n            {this.renderSquare(id)}\n          </div>\n        );\n      }); \n\n      return (\n        <div>\n          {rows}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n        location: [ null, ],\n        order: 'ascend',\n      }\n    }\n\n    jumpTo(step) {\n      this.setState({\n        history: this.state.history.slice(0, step + 1),\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n        location: this.state.location.slice(0, step + 1),\n      });\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const location = this.state.location.slice();\n      \n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n        location: location.concat([\n          '(' + Math.floor(i / 3) + ', ' + i % 3 + ')'\n        ]),\n      });\n    }\n\n    handleSort() {\n      const order = this.state.order;\n\n      if (order === 'ascend') {\n        this.setState({\n          order: 'descend',\n        });\n      } else {\n        this.setState({\n          order: 'ascend',\n        });\n      }\n    }\n\n    render() {\n      let history = this.state.history;\n      const current =  history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n      const sortOrder = (this.state.order === 'ascend') ? 'Descending' : 'Ascending';\n\n      let moves = history.map((step, move) => {\n        const desc = (move) ? 'Go to move #' + move + ' at ' + \n          this.state.location[move] : 'Go to game start';\n\n        if (move === this.state.stepNumber) {\n          return (\n            <li key={move}>\n              <button onClick={() => this.jumpTo(move)}><strong>{desc}</strong></button>\n            </li>\n          );\n        }\n\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n      moves = (this.state.order === 'ascend') ? moves : moves.reverse();\n\n      let status;\n      if (winner) {\n        status = 'Winner: ' + winner.side;\n      } else if (!winner && !current.squares.includes(null)) {\n        status = 'Game Draw';\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              sequence={(winner) ? winner.sequence : null}\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n             />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <button onClick={() => this.handleSort()}>Sort: {sortOrder}</button>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for(let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          side: squares[a],\n          sequence: lines[i].slice()\n        };\n      }\n    }\n    return null;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}